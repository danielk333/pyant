# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.11.11

stages:
  - test
  - release

# Prepare the development environment
.devsetup:
  before_script:
    - python -V
    # Prepare and activate virtual env
    - pip install -U pip
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    # install the package and develop dependencies
    - pip install .[develop,profiling]
    - apt update
    - apt install -y pandoc


#######################
## Platforms testing ##

pytest:
  image: ghcr.io/astral-sh/uv:0.6.12
  allow_failure: true
  script:
    - uv venv -p 3.10 --seed venv3.10
    - source venv3.10/bin/activate
    - pip install .
    - pip install pytest
    - pytest
    - uv venv -p 3.11 --seed venv3.11
    - source venv3.11/bin/activate
    - pip install .
    - pip install pytest
    - pytest
  rules:
    - if: $CI_COMMIT_BRANCH == "main"


###############
## Releasing ##

# Compile documentation for publication
pages:
  stage: release
  extends: .devsetup
  script:
    - mkdocs build --site-dir public
  artifacts:
    paths:
      - public
  only:
    - tags

# Build and check integrity of distribution
# Then publish package on public PyPI
pypi:
  stage: release
  extends: .devsetup
  variables:
    #Use a gitlab variable to securely store the token
    PYPI_TOKEN: $PYPI_TOKEN
  script:
    - python -m build
    - python -m twine check dist/*
    - python -m auditwheel repair dist/*.whl
    - mv -v dist/*tar.gz wheelhouse/
    - >
      TWINE_USERNAME=__token__
      TWINE_PASSWORD=$PYPI_TOKEN
      python -m twine upload wheelhouse/*
  artifacts:
    paths:
      - dist/*
  only:
    - tags
